if [[ -d "$VIRTUAL_ENV" ]]; then
  source "$VIRTUAL_ENV"/bin/activate
elif [[ -r ./.env/bin/activate ]]; then
  source ./.env/bin/activate
fi

# redeclare path* functions, since they aren't exported down from login shells {{{

# enforce unique elements
typeset -U path manpath mailpath fpath infopath cdpath

# debugging paths added via pathadd
pathdebug=

pathprint () {
  if (($# == 0)); then
    set -- PATH
  fi
  for path_var ; do
    path_var=${(U)path_var}
    [[ "$path_var" != *PATH ]] && path_var+=PATH
    print -lr -- "$path_var" "${(@s<:>)${(P)path_var}}"
  done
}

_pathdebug () {
  if [[ -n "$pathdebug" ]]; then
    local ptype="${(U)1}"
    local added="$2"
    [[ "${ptype}" != *PATH ]] && ptype+=PATH
    # find the file which is our caller's caller
    # stack[1] = me
    # stack[2] = who called me
    # stack[3] = source of path change
    local source="${funcstack[3]}"
    # we were called from interactive
    [[ -z "$source" ]] && source=interactive
    [[ "$source" == '(anon)' ]] && source="${funcstack[4]}"
    printf '%s DEBUG:\t%s\t(%s)\n' "$ptype" "$source" "$added" >&2
  fi
}

pathadd () {
  if (($# == 1)); then
    set -- path "$1"
  fi
  local path_type="$1"
  local path_var="${(L)path_type}"
  local addition="$2"
  [[ "$path_var" != *path ]] && path_var+=path
  eval "${path_var}"'+=( "${addition}" )'
  _pathdebug "$path_type" "$addition"
}

pathadd_front () {
  if (($# == 1)); then
    set -- path "$1"
  fi
  local path_type="$1"
  local path_var="${(L)path_type}"
  local addition="$2"
  [[ "$path_var" != *path ]] && path_var+=path
  eval "${path_var}"'=( "$addition" "${'"${path_var}"'[@]}" )'
  _pathdebug "$path_type" "$addition"
}

pathrm () {
  if (($# == 1)); then
    set -- path "$1"
  fi
  local path_type="$1"
  local path_var="${(L)path_type}"
  local deletion="$2"
  [[ "$path_var" != *path ]] && path_var+=path
  eval "${path_var}=(\"\${(@)${path_var}:#${deletion}}\")"
  _pathdebug "RM $path_type" "$deletion"
}

# }}}
