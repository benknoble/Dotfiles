# reload profile easily
bind-key r { source-file ~/.tmux.conf; display-message "reload done" }

set -g prefix C-Space
unbind-key C-b
bind-key C-Space send-prefix

# Options

# don't use a login shell: explicitly set default-command
set -g default-command "$SHELL"

# set color profile
set -g default-terminal "tmux-256color"

# 0 is too far away from reasonable numbers
set -g base-index 1
set -g renumber-windows on
setw -g pane-base-index 1

# activity
set -g activity-action other
set -g visual-activity on
setw -g monitor-activity on
set -g monitor-silence 0

# enable mouse
set -g mouse on

# vim timeout problems
set -sg escape-time 0

# Color scheme/Status Layout

TMUX_BG='#22212c' # dracula bg
TMUX_FG='#f8f8f2' # dracula fg
TMUX_ACCENT='#9580ff' # dracula comment
TMUX_HIGHLIGHT='#8affea' # dracula green

set -g status-justify centre
set -g status-left-length 32
set -g status-right-length 150
set -g status-style bg=$TMUX_BG,fg=$TMUX_FG

set -g message-style bg=$TMUX_ACCENT,fg=$TMUX_FG
set -g message-command-style bg=$TMUX_FG,fg=$TMUX_ACCENT
set -g display-time 2000

set -g status-left "#[bg=$TMUX_ACCENT] #S:#W.#P #{?pane_pipe,P,} #{?client_readonly,RO,}#[bg=$TMUX_BG]"
set -g status-right "#[bg=$TMUX_ACCENT] #h | %R | %d %B %Y #[bg=$TMUX_BG]"
set -g window-status-format " #I #W #F "
set -g window-status-current-style bg=$TMUX_ACCENT,fg=$TMUX_FG
set -g window-status-current-format " #I #W #F#{?synchronize-panes,S,} "
set -g window-status-activity-style bg=$TMUX_HIGHLIGHT,fg=$TMUX_BG
set -g window-status-separator "|"

set -g pane-border-style bg=$TMUX_BG,fg=$TMUX_FG
set -g pane-active-border-style bg=$TMUX_ACCENT,fg=$TMUX_BG
set -g display-panes-time 2000
set -g display-panes-colour $TMUX_ACCENT
set -g display-panes-active-colour $TMUX_HIGHLIGHT

set -g mode-style bg=$TMUX_ACCENT,fg=$TMUX_FG

# Key Bindings

# pane switching
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# window switching
bind-key Left previous-window
bind-key Right next-window
bind-key C-l last-window

# session switching
bind-key s choose-tree -Z -s -O time

# splitting
unbind %
unbind '"'
bind-key | split-window -h
bind-key \\ split-window -h
bind-key - split-window -v

# more vim-like (esp. copy)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# create a throwaway vim
bind-key v new-window -a vim
bind-key V command-prompt -p 'vim +' { new-window -a vim +"%%" }

# Sync/Unsync panes
# toggle, since no value given
bind-key S set-window-option synchronize-panes

# Toggle piping pane output to a file
bind-key C-p pipe-pane -o 'cat >>~/tmux-output.#S-#P'

# quickly fire up gitsh if available
if-shell "command -v gitsh" {
    bind-key g split-window -h -p 50 gitsh
} {
    unbind-key g
}

# run command in all panes on the server
bind-key E command-prompt -p "Command:" {
    run "tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' | xargs -I PANE tmux send-keys -t PANE '%1' Enter"
}


# run command in all panes in the session
bind-key C-e command-prompt -p "Command:" {
    run "tmux list-panes -s -F '##{session_name}:##{window_index}.##{pane_index}' | xargs -I PANE tmux send-keys -t PANE '%1' Enter"
}
