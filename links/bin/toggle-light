#! /usr/bin/env bash

set -euo pipefail

find_alacritty_config() {
  set +u
  local options=(
    "$XDG_CONFIG_HOME/alacritty/alacritty.toml"
    "$XDG_CONFIG_HOME/alacritty.toml"
    "$HOME/.config/alacritty/alacritty.toml"
    "$HOME/.alacritty.toml"
  )
  set -u
  for f in "${options[@]}"; do
    [[ -r "$f" ]] && { printf '%s\n' "$f"; return; }
  done
}

current_color_file() {
  local alacritty="$1"
  grep colors.toml "$alacritty" | jq -r . | sed "s,~,$HOME,"
}

current_colors() {
  local alacritty="$1"
  readlink -- "$(current_color_file "$alacritty")" | sed 's/\.toml$//'
}

toggle_alacritty() {
  local alacritty="$1"
  local new="$2.toml"
  local color_file
  color_file="$(current_color_file "$alacritty")"
  pushd "$(dirname "$color_file")"
  ln -sfv "$new" "$color_file"
  touch "$alacritty"
  popd
}

toggle_vim() {
  local new="$1"
  printf '%s\n' "/COLORSCHEME MARKER/+1s/do_.*$/do_$new()/" wq |
    ed -s ~/.vim/vimrc
}

main() {
  local alacritty current new
  alacritty="$(find_alacritty_config)"
  if [[ -z "$alacritty" ]]; then
    printf '%s\n' "$0: no alacritty config found" >&2
    exit 1
  fi
  current="$(current_colors "$alacritty")"
  case "$current" in
    dracula)
      new=flattened_light ;;
    flattened_light)
      new=dracula ;;
  esac
  toggle_alacritty "$alacritty" "$new"
  toggle_vim "$new"
}

main "$@"
