#! /usr/bin/env bash

set -euo pipefail

USAGE='[-h] (count | len [min|max|avg]) [rev-list options]

Display commit statistics
Filter commits based on [rev-list options]'
SUBDIRECTORY_OK=true

# source git-sh-setup for some helpers
set +u
source "$(git --exec-path)"/git-sh-setup
set -u

commits_list() {
  command=(
    git
    log
    --pretty'='format:$'\a%n%H\t%s %b'
    # start somewhere
    --all
  )
  if (($# > 0)) ; then
    command+=("$@")
  fi
  "${command[@]}" |
    awk '
      /'$'\a''/ && NR != 1 { printf "\n"; next }
      { printf "%s ", $0 }
      END { printf "\n" }
      '
}

commit_count() {
  git rev-list --all --count "$@"
}

commit_len() {
  commits_list "$@" |
    awk -F$'\t' '{ print split($2,_," "), $1 }'
}

commit_len_min() {
  commit_len "$@" |
    sort -n |
    head -n 1
}

commit_len_max() {
  commit_len "$@" |
    sort -rn |
    head -n 1
}

commit_len_avg() {
  commit_len "$@" |
    awk '
      { sum += $1 }
      END { print sum/NR }
    '
}

main() {
  (($# >= 1)) || usage
  case "$1" in
    count) commit_count "${@:2}" ;;
    len)
      if (($# >= 2)); then
        case "$2" in
          max|min|avg) commit_len_"$2" "${@:3}" ;;
          *) commit_len "${@:2}" ;;
        esac
      else
        commit_len "${@:2}"
      fi
      ;;
    *) usage ;;
  esac
}

main "$@"
