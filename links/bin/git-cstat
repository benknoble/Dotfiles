#! /usr/bin/env bash

set -euo pipefail

USAGE='[-h] [rev-list options]

Display a summary of commit length statistics
Filter commits based on [rev-list options]'
SUBDIRECTORY_OK=true

# source git-sh-setup for some helpers
set +u
source "$(git --exec-path)"/git-sh-setup
set -u

SIZER=(
  wc
  # count words
  -w
)

size() {
  local commit="$1"
  git log "$commit" -1 --format=%B | "${SIZER[@]}"
}

commits_list() {
  command=(
    git
    rev-list
    # start somewhere
    --all
  )
  if (($# > 0)) ; then
    command+=("$@")
  fi
  "${command[@]}" 2>/dev/null
}

main() {
  local commits=()
  local max=0
  local max_c
  local min=99999999999
  local min_c
  local sum=0
  local avg=0
  mapfile -t commits < <(commits_list "$@")

  if ((${#commits[@]} == 0)); then
    # provided by git-sh-setup
    die 'No commits!'
  fi

  for commit in "${commits[@]}" ; do
    c_size="$(size "$commit")"
    ((sum+=c_size))
    if ((c_size > max)) ; then
      max="$c_size"
      max_c="$commit"
    fi
    if ((c_size < min)) ; then
      min="$c_size"
      min_c="$commit"
    fi
  done

  avg="$( printf '%s\n' '5k' "$sum" "${#commits[@]}" '/p' | dc )"

  cat <<-DOG
Commits: ${#commits[@]}
Min_length: $min ${min_c:-}
Max_length: $max ${max_c:-}
Average: $avg
DOG
}

main "$@"
