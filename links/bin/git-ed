#! /usr/bin/env bash

set -euo pipefail

OPTIONS_SPEC="\
$(basename -- "$0" | sed -e 's/-/ /')
$(basename -- "$0" | sed -e 's/-/ /') [commitish] [commitish]?

Edit changed files.

In the first form, edit changed files.

In the second form, edit files based on given commits:
  - with 1 commit,  edit files changed by that commit
  - with 2 commits, edit files changed between those commits
--
"
SUBDIRECTORY_OK=true

# source git-sh-setup for some helpers
set +u
source "$(git --exec-path)"/git-sh-setup
set -u

edit_current() {
  git diff --name-only
}

edit_commit() {
  local commit="$1"
  git show --format='' --name-only "$commit"
}

edit_diff() {
  local first="$1"
  local second="$2"
  git diff --name-only "$first" "$second"
}

main() {
  while test $# -gt 0; do
    opt="$1"
    shift
    case "$opt" in
      (--) break ;;
    esac
  done
  local func
  case $# in
    0) func=edit_current ;;
    1) func=edit_commit ;;
    2) func=edit_diff ;;
    *) usage ;;
  esac
  local files=()
  mapfile -t files < <("$func" "$@" | sort | uniq)
  if (( ${#files[@]} > 0 )); then
    # file names are relative to repository root
    cd_to_toplevel && git_editor "${files[@]}"
    exit $?
  else
    echo '# No changed files'
    exit 1
  fi
}

main "$@"
