#! /usr/bin/env bash

set -euo pipefail

TEMP=".$$Makefile"
ORIGINAL='Makefile'
FINAL="$ORIGINAL"
trap 'rm -f "$TEMP"' EXIT

declare -A saved=()

URL='https://raw.githubusercontent.com/benknoble/java_on_nix/master/Makefile'

declare -n PROG
CURL=(
  curl
  -L
  -S
  -o -
)
WGET=(
  wget
  -O -
)

die() {
  local code="${1:-1}"
  (($# > 1)) && shift
  printf '%s\n' "${@:-"Error in $0"}"
  exit "$code"
}

has_curl() {
  command -v curl &>/dev/null
}

has_wget() {
  command -v wget &>/dev/null
}

set_prog() {
  if has_curl ; then
    PROG=CURL
  elif has_wget ; then
    PROG=WGET
  else
    die 1 'Neither curl nor wget is available!'
  fi
}

save_user_vars() {
  local line
  local vars_to_save=(JAR_FILE MAIN TEST RUN DEBUG)
  for var in "${vars_to_save[@]}" ; do
    line="$( grep "$var [?:]=" "$ORIGINAL" )"
    if [[ "${line}" =~ "$var"[[:space:]]*[?:]=[[:space:]]*(.*) ]] ; then
      saved["$var"]="${BASH_REMATCH[1]}"
    else
      die 2 "No match for $var in old Makefile"
    fi
  done
  PERMS="$( stat -f%p "$ORIGINAL" )"
}

restore_user_vars() {
  if (( ${#saved[@]} == 0 )) ; then
    return
  fi
  local sed=(
    sed
    -E
    -i .tmp
  )
  for key in "${!saved[@]}" ; do
    sed+=(-e "s@(${key}[[:space:]]*[?:]=[[:space:]]*)(.*)@\\1${saved[$key]}@")
  done
  sed+=( "$TEMP" )
  "${sed[@]}"
  trap 'rm -f "$TEMP".tmp' EXIT
  chmod "$PERMS" "$TEMP"
}

download() {
  "${PROG[@]}" "$URL" > "$TEMP"
}

finalize() {
  mv "$TEMP" "$FINAL"
}

main() {
  if [[ -n "${1:-}" ]] ; then
    FINAL="$1"
  fi
  set_prog
  [[ -e "$ORIGINAL" ]] && save_user_vars
  if download && restore_user_vars ; then
    finalize
  fi
}

main "$@"
