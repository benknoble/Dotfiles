# clojure extras for ctags

--kinddef-Clojure=m,macro,macros

# symbol-re
# [[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*

# tag-re
# \([ \t]*keyword[ \t]+(symbol-re)

# tag definition
# --regex-Clojure=/tag-re/\1/kind

# # vim commands
# g/^#:/+d
# g/^#:/s~\v^#: (\S+) (.*)$~&\r--regex-Clojure=/\\([ \\t]*\1[ \\t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\\1/\2/

# keyword kind
#: def d,definition
--regex-Clojure=/\([ \t]*def[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/d,definition/
#: defn f,function
--regex-Clojure=/\([ \t]*defn[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/f,function/
#: defn- p,privateFunction
--regex-Clojure=/\([ \t]*defn-[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/p,privateFunction/
#: definline i,inline
--regex-Clojure=/\([ \t]*definline[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/i,inline/
#: defmacro m
--regex-Clojure=/\([ \t]*defmacro[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/m/
#: defmulti a,multimethodDefinition
--regex-Clojure=/\([ \t]*defmulti[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/a,multimethodDefinition/
#: defmethod b,multimethodInstance
--regex-Clojure=/\([ \t]*defmethod[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/b,multimethodInstance/
#: defonce c,onceDefinition
--regex-Clojure=/\([ \t]*defonce[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/c,onceDefinition/
#: defstruct s,struct
--regex-Clojure=/\([ \t]*defstruct[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/s,struct/
#: intern v,intern
--regex-Clojure=/\([ \t]*intern[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/v,intern/
#: create-ns n
--regex-Clojure=/\([ \t]*create-ns[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/n/
#: ns n
--regex-Clojure=/\([ \t]*ns[ \t]+([[:alpha:]*+!-_'?<>=][[:alnum:]*+!-_'?<>=]*)/\1/n/
